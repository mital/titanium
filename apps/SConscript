#!/usr/bin/env python
Import('build')
Import('run')
Import('run_with')
import SCons.Variables
import SCons.Environment
import futils, os.path as path
from SCons.Script import *
from app import App
from subprocess import Popen

def package_app_builder(target, source, env):

	if not 'ID' in env:
		env['ID'] = 'com.titaniumapp.' + env['FULLNAME'].replace(' ', '_').lower()
	if not 'GUID' in env:
		env['GUID'] = 'DEADBEEF-E695-4280-9F1F-96126F3D2C2A'
	if not 'VERSION' in env:
		env['VERSION'] = build.version
	if not 'PUBLISHER' in env:
		env['PUBLISHER'] = None
	if not 'URL' in env:
		env['URL'] = None

	installed = False
	if 'INSTALLED' in env:
		installed = env['INSTALLED']

	app = App(
		build,
		fullname=env['FULLNAME'],
		id=env['ID'],
		version=env['VERSION'],
		guid=env['GUID'],
		publisher=env['PUBLISHER'],
		url=env['URL'])

	if 'MODULES' in env:
		app.set_modules(env['MODULES'])

	app.stage(path.join(build.dir, env['FULLNAME']), src_resources=str(source[0]))

	# Mark these applications as installed
	if installed:
		futils.Touch(path.join(app.contents, '.installed'))

	for s in source[1:]:
		s = str(s)
		futils.CopyToDir(s, app.contents)

	if 'RESOURCES' in env:
		for f in env['RESOURCES']:
			for dirname in os.listdir(f):
				futils.CopyToDir(path.join(f,dirname), path.join(app.contents,'Resources'))

	if run:
		if run_with:
			sys.exit(os.system('"' + app.exe + '" ' + run_with))
		else:
			sys.exit(os.system('"%s"' % app.exe))

build.env['BUILDERS']['PackageApp'] = build.env.Builder(
	action=package_app_builder,
	target_factory=SCons.Node.FS.default_fs.Entry,
	multi=0)

SConscript('testapp/SConscript')
SConscript('drillbit/SConscript')


