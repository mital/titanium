#!/usr/bin/env python
import os, os.path as path
Import('build')

sources = Glob('*.cpp')+Glob('irc/*.cpp')+Glob('http/*.cpp')+Glob('proxy/*.cpp')

env = build.env.Clone();
env.Append(CPPDEFINES = ('TITANIUM_NETWORK_API_EXPORT', 1))
build.add_thirdparty(env, 'poco')

if build.is_osx():
	env.Append(FRAMEWORKS=['SystemConfiguration'])
	sources+=Glob('osx/*.mm')

if build.is_linux():
	sources+=Glob('linux/*.cpp')
	env.ParseConfig('pkg-config --libs --cflags gdk-2.0 dbus-glib-1')

if build.is_win32():
	env.Append(CCFLAGS=['/MD'])
	env.Append(LIBS=['wsock32','ws2_32', 'ole32', 'comsuppw', 'wbemuuid'])
	env.Append(CPPDEFINES = ('WIN32_LEAN_AND_MEAN',1))
	sources += Glob("win32/*.cpp")

m = build.add_module('ti.Network', env=env)
t = env.SharedLibrary(target = m.build_dir + '/tinetworkmodule', source = sources)
build.mark_build_target(t)

t = build.utils.CopyTree(Glob('*.js'), m.build_dir)
build.mark_build_target(t)


